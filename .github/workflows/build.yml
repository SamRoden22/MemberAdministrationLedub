name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test, and Analyze with SonarCloud
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create SonarCloud cache directories
        run: |
          mkdir -p ~/sonar/cache
          mkdir -p ./.sonar/scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

      - name: Download SonarScanner CLI
        run: |
          Invoke-WebRequest -Uri 'https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.12008.zip' -OutFile 'sonar-scanner.zip'
          Expand-Archive -Path 'sonar-scanner.zip' -DestinationPath '.\sonar-scanner'
          Remove-Item 'sonar-scanner.zip'

      - name: Set SonarScanner CLI in PATH
        run: |
          $env:PATH += ";$(Get-Location)\sonar-scanner\bin"

      - name: Install dotnet-coverage tool
        run: dotnet tool install --global dotnet-coverage

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner begin /k:"SamRoden22_MemberAdministrationLedub" /o:"samroden22" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.projectKey="SamRoden22_MemberAdministrationLedub" /d:sonar.organization="samroden22"
          dotnet build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          dotnet test --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          dotnet-coverage collect "dotnet test MemberAdministrationLedub.sln" -f xml -o "coverage.xml"
          sonar-scanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
