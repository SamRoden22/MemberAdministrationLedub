name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test, and Analyze with SonarCloud
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create SonarCloud cache directories
        run: |
          mkdir -p ~/sonar/cache
          mkdir -p ./.sonar/scanner

      - name: Print directory structure
        run: |
          ls -l ~
          ls -l ./.sonar

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          fail-on-cache-miss: true

      - name: Cache SonarCloud scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          fail-on-cache-miss: true

      - name: Install SonarScanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          $response = Invoke-WebRequest -Uri 'https://api.github.com/repos/SonarSource/sonar-scanner-msbuild/releases/latest'
          $downloadUrl = ($response.Content | ConvertFrom-Json).assets[0].browser_download_url
          Invoke-WebRequest -Uri $downloadUrl -OutFile 'sonar-scanner.zip'
          Expand-Archive -Path 'sonar-scanner.zip' -DestinationPath '.\sonar-scanner'
          Remove-Item 'sonar-scanner.zip'

      - name: Set SonarScanner CLI in PATH and run sonar-scanner begin
        run: |
          $env:PATH = "$env:PATH;$(Get-Location)\sonar-scanner\bin"
          Set-Location -Path "$(Get-Location)\sonar-scanner\bin"
          ./sonar-scanner begin /k:"SamRoden22_MemberAdministrationLedub" /o:"samroden22" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.projectKey="SamRoden22_MemberAdministrationLedub" /d:sonar.organization="samroden22"
        env:
          JAVA_HOME: C:\hostedtoolcache\windows\Java_Zulu_jdk\17.0.11-9\x64
          JAVA_HOME_17_X64: C:\hostedtoolcache\windows\Java_Zulu_jdk\17.0.11-9\x64

      - name: Build and test
        run: |
          dotnet build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          dotnet test --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: Publish coverage results to SonarCloud
        run: |
          dotnet-coverage collect "dotnet test MemberAdministrationLedub.sln" -f xml -o "coverage.xml"
          ./sonar-scanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

